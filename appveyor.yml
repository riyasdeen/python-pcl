os:
- Visual Studio 2015
- Windows Server 2012 R2

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
  # Version 1.6.0 Check
  - PYTHON: '"C:\\Python34"'
    PYTHON_VERSION: "3.4.3"
    PYTHON_ARCH: "32"
    PCL_ROOT: '"C:\Program Files\PCL 1.6.0"'

  - PYTHON: '"C:\\Python34-x64"'
    PYTHON_VERSION: "3.4.3"
    PYTHON_ARCH: "64"
    PCL_ROOT: '"C:\Program Files\PCL 1.6.0"'

  # Version 1.7.2, 1.8.0 Check
  #  - PYTHON: "C:\\Python35"
  #    PYTHON_VERSION: "3.5.0"
  #    PYTHON_ARCH: "32"
  #  - PYTHON: "C:\\Python35-x64"
  #    PYTHON_VERSION: "3.5.0"
  #    PYTHON_ARCH: "64"


branches: 
  only: 
    - master 


install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # - ECHO "Filesystem root:"
  # - ps: "ls \"C:/\""
  # - ECHO "Installed SDKs:"
  # - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  # - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }
  
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  
  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"
  
  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  # - "%CMD_IN_ENV% pip install -r dev-requirements.txt"
  
  # PCL Install
  - ps: Start-FileDownload "http://jaist.dl.sourceforge.net/project/pointclouds/1.6.0/PCL-1.6.0-AllInOne-msvc2010-win64.exe"
  # - ps: Start-FileDownload "https://onedrive.live.com/redir?resid=EC9EBB2646FF189A!51248&authkey=!AOPBX-WypndUncw&ithint=file%2cexe"
  
  # Module Install
  # Import-Module ".\appveyor\PS-Zip\PS-Zip.psm1" -Force
  
  # @powershell -NoProfile -ExecutionPolicy unrestricted -Command "Start-Process -Verb runas /user:administrator PCL-1.6.0-AllInOne-msvc2010-win64.exe /S /v/norestart /v/qn"
  - ps : appveyor\install.ps1

build_script:
- cmd: >-
    PCL-1.6.0-AllInOne-msvc2010-win64.exe /S /v/norestart /v/qn

    pip install Cython

    pip install numpy

    python setup.py build_ext -i

    python setup.py install

test_script:
  # Run the project tests
  # - "%CMD_IN_ENV% python setup.py nosetests"
  python tests\test.py

#after_test:
#  # If tests are successful, create binary packages for the project.
#  # - "%CMD_IN_ENV% python setup.py bdist_wheel"
#  # - "%CMD_IN_ENV% python setup.py bdist_wininst"
#  # - "%CMD_IN_ENV% python setup.py bdist_msi"
#  # - ps: "ls dist"

#artifacts:
#  # Archive the generated packages in the ci.appveyor.com build report.
#  # - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

