os:
- Windows Server 2012 R2

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
  # Version 1.6.0 Check
  - PYTHON: "C:\\Miniconda3"
    PYTHON_VERSION: "3.4.3"
    PYTHON_ARCH: "32"
    PCL_ROOT: "C:\\Program Files (x86)\\PCL 1.6.0"
    PCL_VERSION: "1.6"
    PKG_CONFIG_PATH: "C:\\Program Files (x86)\\PCL 1.6.0\\lib\\pkgconfig"
    VS100COMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\Common7\\Tools"

  - PYTHON: "C:\\Miniconda3-x64"
    PYTHON_VERSION: "3.4.3"
    PYTHON_ARCH: "64"
    PCL_ROOT: "C:\\Program Files\\PCL 1.6.0"
    PCL_VERSION: "1.6"
    PKG_CONFIG_PATH: "C:\\Program Files\\PCL 1.6.0\\lib\\pkgconfig"
    VS100COMNTOOLS: "C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Common7\\Tools"


  # Version 1.7.2
  # - PYTHON: "C:\\Python35"
  #   PYTHON_VERSION: "3.5.1"
  #   PYTHON_ARCH: "32"
  #   PCL_ROOT: "C:\\Program Files (x86)\\PCL 1.7.2"
  #   PCL_VERSION: "1.7"
  #   PKG_CONFIG_PATH: "C:\\Program Files (x86)\\PCL 1.7.2\\lib\\pkgconfig"
  # - PYTHON: "C:\\Python35-x64"
  #   PYTHON_VERSION: "3.5.1"
  #   PYTHON_ARCH: "64"
  #   PCL_ROOT: "C:\\Program Files\\PCL 1.7.2"
  #   PCL_VERSION: "1.7"
  #   PKG_CONFIG_PATH: "C:\\Program Files\\PCL 1.7.2\\lib\\pkgconfig"

  # Version 1.8.0 Check
  # - PYTHON: "C:\\Python35"
  #   PYTHON_VERSION: "3.5.0"
  #   PYTHON_ARCH: "32"
  #   PCL_ROOT: "C:\\Program Files (x86)\\PCL 1.8.0"
  #   PCL_VERSION: "1.8.0"
  # - PYTHON: "C:\\Python35-x64"
  #   PYTHON_VERSION: "3.5.0"
  #   PYTHON_ARCH: "64"
  #   PCL_ROOT: "C:\\Program Files\\PCL 1.8.0"
  #   PCL_VERSION: "1.8.0"
  #   PKG_CONFIG_PATH: C:\Program Files\PCL 1.8.0\lib\pkgconfig;C:\Program Files\PCL 1.8.0\3rdParty\FLANN\lib\pkgconfig;C:\Program Files\PCL 1.8.0\3rdParty\Eigen\lib\pkgconfig

branches: 
  only: 
    - master 


install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # - ECHO "Filesystem root:"
  # - ps: "ls \"C:/\""
  # - ECHO "Installed SDKs:"
  # - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  # - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }
  
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  # - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  # Add PCLPath
  # - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PCL_ROOT%\\bin;%PCL_ROOT%\\3rdParty\\VTK\\bin;%PATH%"
  # setParameter
  # - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PCL_ROOT%\\bin;%PCL_ROOT%\\3rdParty\\VTK\\bin;%PATH%"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PYTHON%\\lib\\site-packages;%PCL_ROOT%\\bin;%PCL_ROOT%\\3rdParty\\VTK\\bin;%PATH%"
  # debug(ParameterCheck)
  - "SET PATH"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  # - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  # - "%CMD_IN_ENV% pip install -r dev-requirements.txt"
  # conda
  - "conda install -y -q nose"
  - "conda install -y -q wheel"
  - "conda install -y -q cython"
  - "conda install -y -q numpy"

  # PCL Install
  # - ps: Start-FileDownload "http://jaist.dl.sourceforge.net/project/pointclouds/1.6.0/PCL-1.6.0-AllInOne-msvc2010-win32.exe"
  # - ps: Start-FileDownload "http://jaist.dl.sourceforge.net/project/pointclouds/1.6.0/PCL-1.6.0-AllInOne-msvc2010-win64.exe"
  # - ps: Start-FileDownload "https://onedrive.live.com/redir?resid=EC9EBB2646FF189A!51248&authkey=!AOPBX-WypndUncw&ithint=file%2cexe"
  - ps : appveyor\install.ps1
  
  # Module Install
  # Import-Module ".\appveyor\PS-Zip\PS-Zip.psm1" -Force
  
  # NG
  # @powershell -NoProfile -ExecutionPolicy unrestricted -Command "Start-Process -Verb runas /user:administrator PCL-1.6.0-AllInOne-msvc2010-win64.exe /S /v/norestart /v/qn"


build_script:
- cmd: >-
    copy .\\appveyor\\bfgs.h "%PCL_ROOT%\include\pcl-%PCL_VERSION%\pcl\registration\bfgs.h"

    copy .\\appveyor\\eigen.h "%PCL_ROOT%\include\pcl-%PCL_VERSION%\pcl\registration\eigen.h"

    ls "%PCL_ROOT%\include\pcl-%PCL_VERSION%\pcl\registration"

    ls "%PCL_ROOT%\bin"

    ls "%PYTHON%"

    ls "%PYTHON%\Library"

    copy "C:\projects\python-pcl" "%PCL_ROOT%\bin"

    %CMD_IN_ENV% python setup.py build_ext -i

    %CMD_IN_ENV% python setup.py install


test_script:
  # Run the project tests
  # Path Check(NG)
  # - pcd_viewer_release.exe
  # Path Check(ErrorLog)
  # - pcd_viewer_release2.exe
  # - "%CMD_IN_ENV% python setup.py nosetests"
  - "%CMD_IN_ENV% python tests\\test.py"
  # - python .\tests\test.py

#after_test:
#  # If tests are successful, create binary packages for the project.
#  # - "%CMD_IN_ENV% python setup.py bdist_wheel"
#  # - "%CMD_IN_ENV% python setup.py bdist_wininst"
#  # - "%CMD_IN_ENV% python setup.py bdist_msi"
#  # - ps: "ls dist"


#artifacts:
#  # Archive the generated packages in the ci.appveyor.com build report.
#  # - path: dist\*


#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

