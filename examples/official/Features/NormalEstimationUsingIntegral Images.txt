# Normal Estimation Using Integral Images
# http://pointclouds.org/documentation/tutorials/normal_estimation_using_integral_images.php#normal-estimation-using-integral-images

import pcl

# load point cloud
# cloud = pcl.PointCloud()
cloud = pcl.load('table_scene_mug_stereo_textured.pcd')

# estimate normals
# pcl::PointCloud<pcl::Normal>::Ptr normals (new pcl::PointCloud<pcl::Normal>);
# pcl::IntegralImageNormalEstimation<pcl::PointXYZ, pcl::Normal> ne;
ne = cloud.make_IntegralImageNormalEstimation()

ne.setNormalEstimationMethod (pcl.AVERAGE_3D_GRADIENT)
ne.setMaxDepthChangeFactor(0.02f)
ne.setNormalSmoothingSize(10.0f)
ne.compute(*normals)

# visualize normals
viewer = pcl.pcl_visualization.Visualization()
viewer.set_BackgroundColor (0.0, 0.0, 0.5);
# viewer.addPointCloudNormals<pcl::PointXYZ,pcl::Normal>(cloud, normals);

while (!viewer.wasStopped ())
    viewer.spinOnce ();
end
