# #include <iostream>
# #include <pcl/io/pcd_io.h>
# #include <pcl/point_types.h>
# 
# int main (int argc, char** argv)
# {
#   pcl::PointCloud<pcl::PointXYZ>::Ptr cloud (new pcl::PointCloud<pcl::PointXYZ>);
# 
#   if (pcl::io::loadPCDFile<pcl::PointXYZ> ("test_pcd.pcd", *cloud) == -1) //* load the file
#   {
#     PCL_ERROR ("Couldn't read file test_pcd.pcd \n");
#     return (-1);
#   }
#   std::cout << "Loaded "
#             << cloud->width * cloud->height
#             << " data points from test_pcd.pcd with the following fields: "
#             << std::endl;
#   for (size_t i = 0; i < cloud->points.size (); ++i)
#     std::cout << "    " << cloud->points[i].x
#               << " "    << cloud->points[i].y
#               << " "    << cloud->points[i].z << std::endl;
# 
#   return (0);
# }

cloud = pcl.load("test_pcd.pcd")

print ('Loaded ' + str(cloud.width * cloud.height) + ' data points from test_pcd.pcd with the following fields: ')
for i in range(0, cloud_filtered.size):
    print ('x: '  + str(cloud_filtered[i][0]) + ', y : ' + str(cloud_filtered[i][1])  + ', z : ' + str(cloud_filtered[i][2]))
